{"version":3,"sources":["alternate.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;EAuBE;;AAIF;;GAEG;AACH;IAgCI;;OAEG;IACH,+BAAY,IAAqC;QAjCjD;;WAEG;QACa,qBAAgB,GAAW,IAAI,CAAC;QAEhD;;WAEG;QACa,mBAAc,GAAW,IAAI,CAAC;QAE9C;;WAEG;QACa,sBAAiB,GAAW,IAAI,CAAC;QAEjD;;WAEG;QACa,sBAAiB,GAAW,IAAI,CAAC;QAEjD;;WAEG;QACa,kBAAa,GAAY,IAAI,CAAC;QAE9C;;WAEG;QACa,cAAS,GAAuB,EAAE,CAAC;QAM/C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC1C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IACpC,CAAC;IACL,4BAAC;AAAD,CA3CA,AA2CC,IAAA;AA3CY,sDAAqB","file":"alternate.js","sourcesContent":["/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { USBEndpoint } from \"./endpoint\";\n\n/**\n * USB Alternate Interface\n */\nexport class USBAlternateInterface {\n\n    /**\n     * The alternate setting for this interface\n     */\n    public readonly alternateSetting: number = null;\n\n    /**\n     * The class of this interface\n     */\n    public readonly interfaceClass: number = null;\n\n    /**\n     * The sub class of this interface\n     */\n    public readonly interfaceSubclass: number = null;\n\n    /**\n     * The protocol of this interface\n     */\n    public readonly interfaceProtocol: number = null;\n\n    /**\n     * The name of this interface\n     */\n    public readonly interfaceName?: string = null;\n\n    /**\n     * The array of endpoints on this interface\n     */\n    public readonly endpoints: Array<USBEndpoint> = [];\n\n    /**\n     * @hidden\n     */\n    constructor(init?: Partial<USBAlternateInterface>) {\n        this.alternateSetting = init.alternateSetting;\n        this.interfaceClass = init.interfaceClass;\n        this.interfaceSubclass = init.interfaceSubclass;\n        this.interfaceProtocol = init.interfaceProtocol;\n        this.interfaceName = init.interfaceName;\n        this.endpoints = init.endpoints;\n    }\n}\n"],"sourceRoot":"../src"}