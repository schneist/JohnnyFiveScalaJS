{"version":3,"sources":["interface.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;EAuBE;;AAGF,qCAAoC;AAEpC;;GAEG;AACH;IAiCI;;OAEG;IACH,sBAAY,IAA4B;QAlCxC;;WAEG;QACa,oBAAe,GAAW,IAAI,CAAC;QAE/C;;WAEG;QACa,eAAU,GAAiC,EAAE,CAAC;QAEtD,aAAQ,GAAY,KAAK,CAAC;QAQ1B,sBAAiB,GAAW,CAAC,CAAC;QAQtC;;WAEG;QACa,YAAO,GAAW,IAAI,CAAC;QAMnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAElC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAChC,CAAC;IAzBD,sBAAW,iCAAO;QAHlB;;WAEG;aACH;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;;;OAAA;IAMD,sBAAW,mCAAS;QAHpB;;WAEG;aACH;YAAA,iBAEC;YADG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,gBAAgB,KAAK,KAAI,CAAC,iBAAiB,EAArD,CAAqD,CAAC,CAAC;QACpG,CAAC;;;OAAA;IAiBD;;OAEG;IACI,+CAAwB,GAA/B,UAAgC,gBAAwB;QAAxD,iBAKC;QAJG,MAAM,CAAC,iBAAO,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,gBAAgB,CAAC;aAC5F,IAAI,CAAC;YACF,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACI,qCAAc,GAArB;QAAA,iBAKC;QAJG,MAAM,CAAC,iBAAO,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC;aAChE,IAAI,CAAC;YACF,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACI,uCAAgB,GAAvB;QAAA,iBAKC;QAJG,MAAM,CAAC,iBAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC;aAClE,IAAI,CAAC;YACF,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACI,4BAAK,GAAZ;QACI,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;IAC/B,CAAC;IACL,mBAAC;AAAD,CA/EA,AA+EC,IAAA;AA/EY,oCAAY","file":"interface.js","sourcesContent":["/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { USBAlternateInterface } from \"./alternate\";\nimport { adapter } from \"./adapter\";\n\n/**\n * USB Interface\n */\nexport class USBInterface {\n\n    /**\n     * Number of this interface\n     */\n    public readonly interfaceNumber: number = null;\n\n    /**\n     * Array of alternate interfaces\n     */\n    public readonly alternates: Array<USBAlternateInterface> = [];\n\n    private _claimed: boolean = false;\n    /**\n     * Whether this interface is claimed\n     */\n    public get claimed(): boolean {\n        return this._claimed;\n    }\n\n    private _currentAlternate: number = 0;\n    /**\n     * Return the current alternate interface\n     */\n    public get alternate(): USBAlternateInterface {\n        return this.alternates.find(alternate => alternate.alternateSetting === this._currentAlternate);\n    }\n\n    /**\n     * @hidden\n     */\n    public readonly _handle: string = null;\n\n    /**\n     * @hidden\n     */\n    constructor(init?: Partial<USBInterface>) {\n        this.interfaceNumber = init.interfaceNumber;\n        this.alternates = init.alternates;\n\n        this._handle = init._handle;\n    }\n\n    /**\n     * @hidden\n     */\n    public selectAlternateInterface(alternateSetting: number): Promise<void> {\n        return adapter.selectAlternateInterface(this._handle, this.interfaceNumber, alternateSetting)\n        .then(() => {\n            this._currentAlternate = alternateSetting;\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public claimInterface(): Promise<void> {\n        return adapter.claimInterface(this._handle, this.interfaceNumber)\n        .then(() => {\n            this._claimed = true;\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public releaseInterface(): Promise<void> {\n        return adapter.releaseInterface(this._handle, this.interfaceNumber)\n        .then(() => {\n            this._claimed = false;\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    public reset() {\n        this._currentAlternate = 0;\n    }\n}\n"],"sourceRoot":"../src"}