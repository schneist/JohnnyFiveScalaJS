{"version":3,"sources":["usb.ts"],"names":[],"mappings":"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","file":"usb.js","sourcesContent":["/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { EventDispatcher } from \"./dispatcher\";\nimport { USBDevice } from \"./device\";\nimport { USBOptions, USBDeviceRequestOptions } from \"./interfaces\";\nimport { USBAdapter, adapter } from \"./adapter\";\n\n/**\n * USB class\n */\nexport class USB extends EventDispatcher {\n    /**\n     * Allowed device Connected event\n     * @event\n     */\n    public static EVENT_DEVICE_CONNECT: string = \"connect\";\n\n    /**\n     * Allowed device Disconnected event\n     * @event\n     */\n    public static EVENT_DEVICE_DISCONNECT: string = \"disconnect\";\n\n    private allowedDevices: Array<USBDevice> = [];\n    private devicesFound: (devices: Array<USBDevice>, selectFn: (device: USBDevice) => void) => USBDevice = null;\n\n    /**\n     * USB constructor\n     * @param options USB initialisation options\n     */\n    constructor(options?: USBOptions) {\n        super();\n\n        options = options || {};\n        this.devicesFound = options.devicesFound;\n\n        adapter.addListener(USBAdapter.EVENT_DEVICE_CONNECT, device => {\n            if (this.replaceAllowedDevice(device)) {\n                this.emit(USB.EVENT_DEVICE_CONNECT, device);\n            }\n        });\n\n        adapter.addListener(USBAdapter.EVENT_DEVICE_DISCONNECT, handle => {\n            const allowedDevice = this.allowedDevices.find(allowedDevices => allowedDevices._handle === handle);\n\n            if (allowedDevice) {\n                this.emit(USB.EVENT_DEVICE_DISCONNECT, allowedDevice);\n            }\n        });\n    }\n\n    private replaceAllowedDevice(device: USBDevice): boolean {\n        for (const i in this.allowedDevices) {\n            if (this.allowedDevices[i].productId === device.productId\n                && this.allowedDevices[i].vendorId === device.vendorId\n                && this.allowedDevices[i].serialNumber === device.serialNumber) {\n                this.allowedDevices[i] = device;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private filterDevice(options: USBDeviceRequestOptions, device: USBDevice): boolean {\n        return options.filters.some(filter => {\n            // Vendor\n            if (filter.vendorId && filter.vendorId !== device.vendorId) return false;\n\n            // Product\n            if (filter.productId && filter.productId !== device.productId) return false;\n\n            // Class\n            if (filter.classCode) {\n\n                // Interface Descriptors\n                const match = device.configuration.interfaces.some(iface => {\n                    // Class\n                    if (filter.classCode && filter.classCode !== iface.alternate.interfaceClass) return false;\n\n                    // Subclass\n                    if (filter.subclassCode && filter.subclassCode !== iface.alternate.interfaceSubclass) return false;\n\n                    // Protocol\n                    if (filter.protocolCode && filter.protocolCode !== iface.alternate.interfaceProtocol) return false;\n\n                    return true;\n                });\n\n                if (match) return true;\n            }\n\n            // Class\n            if (filter.classCode && filter.classCode !== device.deviceClass) return false;\n\n            // Subclass\n            if (filter.subclassCode && filter.subclassCode !== device.deviceSubclass) return false;\n\n            // Protocol\n            if (filter.protocolCode && filter.protocolCode !== device.deviceProtocol) return false;\n\n            // Serial\n            if (filter.serialnumber && filter.serialnumber !== device.serialNumber) return false;\n\n            return true;\n        });\n    }\n\n    /**\n     * Gets all allowed Web USB devices\n     * @returns Promise containing an array of devices\n     */\n    public getDevices(): Promise<Array<USBDevice>> {\n        return new Promise((resolve, _reject) => {\n            resolve(this.allowedDevices);\n        });\n    }\n\n    /**\n     * Requests a single Web USB device\n     * @param options The options to use when scanning\n     * @returns Promise containing the selected device\n     */\n    public requestDevice(options: USBDeviceRequestOptions): Promise<USBDevice> {\n        return new Promise((resolve, reject) => {\n            // Must have options\n            if (!options) {\n                return reject(new TypeError(\"requestDevice error: 1 argument required, but only 0 present\"));\n            }\n\n            // Options must be an object\n            if (options.constructor !== {}.constructor) {\n                return reject(new TypeError(\"requestDevice error: parameter 1 (options) is not an object\"));\n            }\n\n            // Must have a filter\n            if (!options.filters) {\n                return reject(new TypeError(\"requestDevice error: required member filters is undefined\"));\n            }\n\n            // Filter must be an array\n            if (options.filters.constructor !== [].constructor) {\n                return reject(new TypeError(\"requestDevice error: the provided value cannot be converted to a sequence\"));\n            }\n\n            // Check filters\n            const check = options.filters.every(filter => {\n\n                // Protocol & Subclass\n                if (filter.protocolCode && !filter.subclassCode) {\n                    reject(new TypeError(\"requestDevice error: subclass code is required\"));\n                    return false;\n                }\n\n                // Subclass & Class\n                if (filter.subclassCode && !filter.classCode) {\n                    reject(new TypeError(\"requestDevice error: class code is required\"));\n                    return false;\n                }\n\n                return true;\n            });\n\n            if (!check) return;\n\n            return adapter.listUSBDevices()\n            .then(devices => {\n                devices = devices.filter(device => this.filterDevice(options, device));\n\n                if (devices.length === 0) {\n                    return reject(new Error(\"requestDevice error: no devices found\"));\n                }\n\n                function selectFn(device: USBDevice) {\n                    if (!this.replaceAllowedDevice(device)) this.allowedDevices.push(device);\n                    resolve(device);\n                }\n\n                // If no devicesFound function, select the first device found\n                if (!this.devicesFound) return selectFn.call(this, devices[0]);\n\n                const selectedDevice = this.devicesFound(devices, selectFn.bind(this));\n                if (selectedDevice) selectFn.call(this, selectedDevice);\n            }).catch(error => {\n                reject(new Error(`requestDevice error: ${error}`));\n            });\n        });\n    }\n}\n"],"sourceRoot":"../src"}