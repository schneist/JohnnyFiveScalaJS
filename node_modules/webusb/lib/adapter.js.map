{"version":3,"sources":["adapter.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;EAuBE;;;;;;;;;;;;AAEF,iCAAsC;AACtC,2BAuBa;AAQb,iDAAmD;AACnD,yCAA2C;AAC3C,yCAAoD;AACpD,uCAAyC;AACzC,mCAAqC;AAGrC;;GAEG;AACH,IAAM,qBAAqB,GAAG,GAAG,CAAC;AAClC;;GAEG;AACH,IAAM,mBAAmB,GAAG,EAAE,CAAC;AAE/B;;GAEG;AACH,IAAM,SAAS,GAAG;IACd,QAAQ,EAAE,sCAAsC;IAChD,aAAa,EAAE,IAAI;IACnB,kBAAkB,EAAE,IAAI;IACxB,yBAAyB,EAAE,IAAI;IAC/B,WAAW,EAAE,KAAK;IAClB,kBAAkB,EAAE,MAAM;IAC1B,gBAAgB,EAAE,IAAI;IACtB,iBAAiB,EAAE,IAAI;IACvB,aAAa,EAAE,IAAI;IACnB,aAAa,EAAE,IAAI;CACtB,CAAC;AA0BF;;GAEG;AACH;IAAgC,8BAAY;IAQxC;QAAA,YACI,iBAAO,SAyBV;QA7BD,qDAAqD;QAC7C,aAAO,GAAsD,EAAE,CAAC;QAKpE,QAAE,CAAC,QAAQ,EAAE,UAAA,MAAM;YACf,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE,mBAAmB,CAAC;iBAC3C,IAAI,CAAC,UAAA,YAAY;gBACd,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBACf,IAAM,MAAM,GAAG,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;oBAClD,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;yBAC7B,IAAI,CAAC,UAAA,SAAS;wBACX,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;4BACZ,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAC;wBAC1D,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,QAAE,CAAC,QAAQ,EAAE,UAAA,MAAM;YACf,IAAM,MAAM,GAAG,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAE5C,EAAE,CAAC,CAAC,MAAM,IAAI,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACjC,OAAO,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC5B,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC;YAC1D,CAAC;QACL,CAAC,CAAC,CAAC;;IACP,CAAC;IAEO,oCAAe,GAAvB,UAAwB,MAAc;QAClC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,KAAK,IAAI,IAAI,MAAM,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAI,MAAM,CAAC,SAAS,SAAI,MAAM,CAAC,aAAe,CAAC;IACzD,CAAC;IAEO,mCAAc,GAAtB,UAA0B,IAAgC,EAAE,MAAkB;QAC1E,iBAAiB,KAAK,EAAE,KAAK;YAA7B,iBAWC;YAVG,MAAM,CAAC,KAAK;iBACX,IAAI,CAAC,UAAA,OAAO;gBACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,EAAE,KAAK,CAAC;qBAC5B,IAAI,CAAC,UAAA,MAAM;oBACR,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACT,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACzB,CAAC;oBACD,MAAM,CAAC,OAAO,CAAC;gBACnB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QACD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IAClE,CAAC;IAEO,yCAAoB,GAA5B,UAAgC,IAAqD,EAAE,MAAc,EAAE,WAAuB;QAC1H,iBAAiB,KAAK,EAAE,UAAU;YAAlC,iBASC;YARG,MAAM,CAAC,KAAK;iBACX,IAAI,CAAC,UAAA,OAAO;gBACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,EAAE,MAAM,EAAE,UAAU,CAAC;qBACzC,IAAI,CAAC,UAAA,MAAM;oBACR,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACrB,MAAM,CAAC,OAAO,CAAC;gBACnB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QACD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACvE,CAAC;IAEO,0BAAK,GAAb,UAAc,OAAuC;QAAvC,wBAAA,EAAA,+BAAuC;QACjD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,OAAO;YAChC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,iCAAY,GAApB,UAAqB,EAAsB,EAAE,OAAmB,EAAE,OAAuC;QAAzG,iBAcC;QAd4C,wBAAA,EAAA,WAAmB;QAAE,wBAAA,EAAA,+BAAuC;QACrG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,EAAE,EAAE;iBACH,IAAI,CAAC,OAAO,CAAC;iBACb,KAAK,CAAC,UAAA,KAAK;gBACR,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;oBAChB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACzB,CAAC;gBAED,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC;qBACzB,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,EAAzC,CAAyC,CAAC;qBACrD,IAAI,CAAC,OAAO,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,gCAAW,GAAnB;QACI,IAAM,OAAO,GAAG,mBAAa,EAAE,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC;IAEO,+BAAU,GAAlB,UAAmB,MAAc,EAAE,OAAmB;QAAtD,iBA2BC;QA3BkC,wBAAA,EAAA,WAAmB;QAElD,8CAA8C;QAC9C,IAAI,CAAC;YACD,gDAAgD;YAChD,MAAM,CAAC,gBAAgB,CAAC;YACxB,gDAAgD;YAChD,MAAM,CAAC,oBAAoB,CAAC;YAC5B,gDAAgD;YAChD,MAAM,CAAC,gBAAgB,CAAC;QAC5B,CAAC;QAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC;aAC3C,IAAI,CAAC,UAAA,YAAY,IAAI,OAAA,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAnC,CAAmC,CAAC;aACzD,IAAI,CAAC,UAAA,UAAU;YACZ,MAAM,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC;iBACxC,IAAI,CAAC,UAAA,GAAG;gBACL,IAAM,MAAM,GAAG,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBAC5C,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG;oBACnB,MAAM,EAAE,MAAM;oBACd,GAAG,EAAE,GAAG;iBACX,CAAC;gBACF,MAAM,CAAC,MAAM,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,oCAAe,GAAvB,UAAwB,MAAc,EAAE,OAAe;QAAvD,iBAoBC;QAnBG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,OAAO;YAEhC,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC;iBAC/B,IAAI,CAAC;gBACF,oDAAoD;gBACpD,KAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,YAAY;oBACnD,IAAI,CAAC;wBACD,oFAAoF;wBACpF,MAAM,CAAC,KAAK,EAAE,CAAC;wBACnB,oCAAoC;oBACpC,CAAC;oBAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA,CAAC;oBACnB,EAAE,CAAC,CAAC,KAAK,CAAC;wBAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;oBAC9B,OAAO,CAAC,YAAY,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,MAAM;gBACT,OAAO,CAAC,EAAE,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,0CAAqB,GAA7B,UAA8B,MAAc,EAAE,QAA0D;QACpG,IAAM,YAAY,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,UAAU;YAC5C,EAAE,CAAC,CAAC,KAAK,CAAC;gBAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAExC,IAAM,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3B,YAAY,CAAC,IAAI,CAAC;oBACd,MAAM,EAAE,MAAM;oBACd,EAAE,EAAE,CAAC;oBACL,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;oBACtC,IAAI,EAAE,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,kBAAkB;oBACnD,IAAI,EAAE,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,mBAAmB;iBACvD,CAAC,CAAC;YACP,CAAC;YAED,QAAQ,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,qCAAgB,GAAxB,UAAyB,MAAc,EAAE,QAAiD;QAEtF,EAAE,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;YACzD,uCAAuC;YACvC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACrC,CAAC;QAED,MAAM,CAAC,eAAe,CAAC,wBAAkB,EAAE,mCAA6B,EAAE,CAAC,SAAS,CAAC,aAAa,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,kBAAkB,EAAE,UAAC,MAAM,EAAE,OAAO;YACvJ,EAAE,CAAC,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAE7C,IAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,eAAe,CAAC,wBAAkB,EAAE,mCAA6B,EAAE,CAAC,SAAS,CAAC,aAAa,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,UAAC,KAAK,EAAE,MAAM;gBACpI,EAAE,CAAC,CAAC,KAAK,CAAC;oBAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;gBAE5C,IAAM,UAAU,GAAG;oBACf,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC5B,eAAe,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;oBACpC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;oBACpC,cAAc,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;oBACnC,YAAY,EAAE,EAAE;iBACnB,CAAC;gBAEF,IAAI,CAAC,GAAG,SAAS,CAAC,kBAAkB,CAAC;gBACrC,OAAO,CAAC,GAAG,UAAU,CAAC,YAAY,EAAE,CAAC;oBACjC,IAAM,UAAU,GAAQ;wBACpB,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;wBAChC,eAAe,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;wBACxC,kBAAkB,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;qBAC9C,CAAC;oBAEF,UAAU,CAAC,mBAAmB,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;oBAC7E,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACzC,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC;gBAC5B,CAAC;gBAED,mBAAmB;gBACnB,QAAQ,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,qCAAgB,GAAxB,UAAyB,YAAiB;QAA1C,iBAYC;QAXG,IAAM,oBAAoB,GAAG,YAAY,CAAC,MAAM,CAAC,UAAA,UAAU;YACvD,MAAM,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAM,aAAa,GAAG,oBAAoB,CAAC,IAAI,CAAC,UAAA,UAAU;YACtD,IAAM,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAC3D,IAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YACjD,MAAM,CAAC,IAAI,KAAK,SAAS,CAAC,QAAQ,IAAI,OAAO,KAAK,SAAS,CAAC,kBAAkB,CAAC;QACnF,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,aAAa,CAAC;IACzB,CAAC;IAEO,+BAAU,GAAlB,UAAmB,MAAc;QAC7B,IAAM,KAAK,GAAG,CAAA,aAAW,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAG,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACzE,IAAM,KAAK,GAAG,CAAA,SAAO,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAG,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,IAAM,KAAK,GAAG,CAAA,SAAO,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAG,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAErE,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE,CAAC;YAC3B,KAAK,CAAC,IAAI,CAAC,CAAA,OAAK,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAG,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,CAAC;QAED,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAG,EAAE,CAAC;YAC5B,KAAK,CAAC,IAAI,CAAC,CAAA,OAAK,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAG,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,CAAC;QAED,MAAM,CAAI,KAAK,SAAI,KAAK,SAAI,KAAK,SAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,SAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAG,CAAC;IAC5E,CAAC;IAEO,8BAAS,GAAjB,UAAkB,MAAc,EAAE,UAAe,EAAE,cAA8B;QAAjF,iBAiCC;QAjCkD,+BAAA,EAAA,qBAA8B;QAC7E,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAE7F,IAAM,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAC7C,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAE3C,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC;iBACtB,IAAI,CAAC;gBACF,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,iBAAiB,EAAE,EAAE,EAAE,UAAC,KAAK,EAAE,MAAM;oBAC5G,MAAM,CAAC,KAAK,EAAE,CAAC;oBAEf,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACR,8CAA8C;wBAC9C,EAAE,CAAC,CAAC,cAAc,CAAC;4BAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;wBACzC,IAAI;4BAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAC9B,CAAC;oBAED,sCAAsC;oBACtC,oCAAoC;oBACpC,IAAI,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAErC,IAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,oCAAoC;oBACxE,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;wBAAC,GAAG,GAAG,SAAS,GAAG,GAAG,CAAC;oBACxC,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;wBAAC,GAAG,GAAG,UAAU,GAAG,GAAG,CAAC;oBAEzC,OAAO,CAAC,GAAG,CAAC,CAAC;gBACjB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,MAAM;gBACT,OAAO,CAAC,EAAE,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,sCAAiB,GAAzB,UAA0B,MAAc;QAAxC,iBAwEC;QAvEG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,OAAO;YAChC,IAAM,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YAC3C,IAAM,GAAG,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;YAErC,IAAI,OAAO,GAA4B,IAAI,CAAC;YAC5C,IAAI,gBAAgB,GAAqB,IAAI,CAAC;YAC9C,IAAI,gBAAgB,GAAqB,IAAI,CAAC;YAE9C,IAAI,CAAC;gBACD,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;gBAC3C,OAAO,GAAG,MAAM,CAAC,oBAAoB,CAAC;gBACtC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;YAC/C,CAAC;YAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;gBAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAEnC,MAAM,CAAC,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,wBAAwB,EAAE,MAAM,EAAE,OAAO,CAAC;iBAC/E,IAAI,CAAC,UAAA,cAAc;gBAEhB,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACpB,MAAM,CAAC,OAAO,CAAC,IAAI,kBAAS,CAAC;wBACzB,OAAO,EAAE,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;wBACrC,GAAG,EAAE,GAAG;wBACR,cAAc,EAAE,cAAc;qBACjC,CAAC,CAAC,CAAC;gBACR,CAAC;gBAED,IAAM,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;gBACrE,IAAM,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;gBAC/D,IAAI,gBAAgB,GAAG,IAAI,CAAC;gBAC5B,IAAI,WAAW,GAAG,IAAI,CAAC;gBAEvB,MAAM,CAAC,KAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,gBAAgB,CAAC,aAAa,CAAC;qBACtE,IAAI,CAAC,UAAA,IAAI;oBACN,gBAAgB,GAAG,IAAI,CAAC;oBACxB,MAAM,CAAC,KAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gBACvE,CAAC,CAAC;qBACD,IAAI,CAAC,UAAA,IAAI;oBACN,WAAW,GAAG,IAAI,CAAC;oBACnB,MAAM,CAAC,KAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,gBAAgB,CAAC,aAAa,CAAC,CAAC;gBAC5E,CAAC,CAAC;qBACD,IAAI,CAAC,UAAA,YAAY;oBACd,IAAM,KAAK,GAAuB;wBAC9B,OAAO,EAAE,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;wBACrC,cAAc,EAAE,gBAAgB,CAAC,eAAe;wBAChD,GAAG,EAAE,GAAG;wBACR,WAAW,EAAE,gBAAgB,CAAC,YAAY;wBAC1C,cAAc,EAAE,gBAAgB,CAAC,eAAe;wBAChD,cAAc,EAAE,gBAAgB,CAAC,eAAe;wBAChD,SAAS,EAAE,gBAAgB,CAAC,SAAS;wBACrC,QAAQ,EAAE,gBAAgB,CAAC,QAAQ;wBACnC,kBAAkB,EAAE,aAAa,CAAC,KAAK;wBACvC,kBAAkB,EAAE,aAAa,CAAC,KAAK;wBACvC,qBAAqB,EAAE,aAAa,CAAC,GAAG;wBACxC,eAAe,EAAE,UAAU,CAAC,KAAK;wBACjC,eAAe,EAAE,UAAU,CAAC,KAAK;wBACjC,kBAAkB,EAAE,UAAU,CAAC,GAAG;wBAClC,gBAAgB,EAAE,gBAAgB;wBAClC,WAAW,EAAE,WAAW;wBACxB,YAAY,EAAE,YAAY;wBAC1B,cAAc,EAAE,cAAc;wBAC9B,qBAAqB,EAAE,gBAAgB,CAAC,mBAAmB;qBAC9D,CAAC;oBACF,MAAM,CAAC,OAAO,CAAC,IAAI,kBAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,MAAM;gBACX,OAAO,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,kCAAa,GAArB,UAAsB,OAAe;QACjC,IAAM,GAAG,GAAG,CAAA,SAAO,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAG,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,MAAM,CAAC;YACH,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;YACvC,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;YACvC,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;SACxC,CAAC;IACN,CAAC;IAEO,wCAAmB,GAA3B,UAA4B,MAAc,EAAE,KAAa;QAAzD,iBAcC;QAbG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC;iBACtB,IAAI,CAAC;gBACF,MAAM,CAAC,mBAAmB,CAAC,KAAK,EAAE,UAAC,KAAK,EAAE,MAAM;oBAC5C,MAAM,CAAC,KAAK,EAAE,CAAC;oBACf,EAAE,CAAC,CAAC,KAAK,CAAC;wBAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAChC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,MAAM;gBACT,OAAO,CAAC,EAAE,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,qCAAgB,GAAxB,UAAyB,MAAc;QACnC,IAAM,WAAW,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;QAClD,MAAM,CAAC,IAAI,QAAQ,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IAEO,yCAAoB,GAA5B,UAA6B,YAA2C;QACpE,gBAAgB,MAAqC;YACjD,MAAM,CAAE,MAA0B,CAAC,MAAM,KAAK,SAAS,CAAC;QAC5D,CAAC;QAED,IAAM,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC;QAC9E,MAAM,CAAC,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC;IACnC,CAAC;IAEO,gCAAW,GAAnB,UAAoB,MAAc,EAAE,SAAuB,EAAE,cAAsB;QAC/E,IAAI,QAAQ,GAAa,IAAI,CAAC;QAC9B,IAAM,OAAO,GAAG,cAAc,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,wBAAkB,CAAC,CAAC,CAAC,yBAAmB,CAAC,CAAC;QAEjG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,UAAA,KAAK;YACxB,IAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAEvC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,QAAQ,GAAG,MAAM,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAEO,kCAAa,GAArB,UAAsB,MAAc,EAAE,cAAsB;QACxD,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;QAChE,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,SAAS,KAAK,IAAI,CAAC;YAAC,MAAM,CAAE,QAAuB,CAAC;IACjF,CAAC;IAEO,mCAAc,GAAtB,UAAuB,MAAc,EAAE,cAAsB;QACzD,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;QACjE,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,SAAS,KAAK,KAAK,CAAC;YAAC,MAAM,CAAE,QAAwB,CAAC;IACnF,CAAC;IAEO,0CAAqB,GAA7B,UAA8B,UAA8B;QACxD,IAAM,SAAS,GAAG,UAAU,CAAC,gBAAgB,GAAG,wBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAClF,MAAM,CAAC,IAAI,sBAAW,CAAC;YACnB,cAAc,EAAE,UAAU,CAAC,gBAAgB,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,wBAAkB,CAAC,CAAC,CAAC,yBAAmB,CAAC;YAC7G,SAAS,EAAE,SAAS;YACpB,IAAI,EAAE,CAAC,UAAU,CAAC,YAAY,GAAG,SAAS,CAAC,yBAAyB,CAAC,KAAK,+BAAyB,CAAC,CAAC,CAAC,MAAM;gBACxG,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY,GAAG,SAAS,CAAC,yBAAyB,CAAC,KAAK,oCAA8B,CAAC,CAAC,CAAC,WAAW;oBAClH,CAAC,CAAC,aAAa;YACnB,UAAU,EAAE,UAAU,CAAC,cAAc;SACxC,CAAC,CAAC;IACP,CAAC;IAEO,qDAAgC,GAAxC,UAAyC,MAAc,EAAE,UAA+B;QAAxF,iBAYC;QAXG,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,UAAU,CAAC,UAAU,CAAC;aAC7D,IAAI,CAAC,UAAA,IAAI;YACN,MAAM,CAAC,IAAI,iCAAqB,CAAC;gBAC7B,gBAAgB,EAAE,UAAU,CAAC,iBAAiB;gBAC9C,cAAc,EAAE,UAAU,CAAC,eAAe;gBAC1C,iBAAiB,EAAE,UAAU,CAAC,kBAAkB;gBAChD,iBAAiB,EAAE,UAAU,CAAC,kBAAkB;gBAChD,aAAa,EAAE,IAAI;gBACnB,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,KAAI,CAAC,qBAAqB,CAAC;aAClE,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,6CAAwB,GAAhC,UAAiC,MAAc,EAAE,WAAuC;QAAxF,iBASC;QARG,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,gCAAgC,EAAE,MAAM,EAAE,WAAW,CAAC;aAC3F,IAAI,CAAC,UAAA,UAAU;YACZ,MAAM,CAAC,IAAI,wBAAY,CAAC;gBACpB,OAAO,EAAE,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBACrC,eAAe,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,gBAAgB;gBAChD,UAAU,EAAE,UAAU;aACzB,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,6CAAwB,GAAhC,UAAiC,MAAc,EAAE,UAA4B;QAA7E,iBAcC;QAbG,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,UAAU,CAAC,cAAc,CAAC;aACjE,IAAI,CAAC,UAAA,IAAI;YACN,IAAM,aAAa,GAAG,UAAU,CAAC,UAAU,IAAI,EAAE,CAAC;YAElD,MAAM,CAAC,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,wBAAwB,EAAE,MAAM,EAAE,aAAa,CAAC;iBACrF,IAAI,CAAC,UAAA,UAAU;gBACZ,MAAM,CAAC,IAAI,gCAAgB,CAAC;oBACxB,kBAAkB,EAAE,UAAU,CAAC,mBAAmB;oBAClD,iBAAiB,EAAE,IAAI;oBACvB,UAAU,EAAE,UAAU;iBACzB,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,8BAAS,GAAjB,UAAkB,MAAc;QAC5B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;IACvC,CAAC;IAEO,gDAA2B,GAAnC,UAAoC,KAAmC,EAAE,SAAiB;QACtF,IAAM,SAAS,GAAG,KAAK,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,6BAAuB;YACxD,CAAC,CAAC,KAAK,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC,gCAA0B;gBAC9D,CAAC,CAAC,KAAK,CAAC,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC,+BAAyB;oBAC5D,CAAC,CAAC,4BAAsB,CAAC;QAEzC,IAAM,WAAW,GAAG,KAAK,CAAC,WAAW,KAAK,UAAU,CAAC,CAAC,CAAC,kCAA4B;YACjE,CAAC,CAAC,KAAK,CAAC,WAAW,KAAK,OAAO,CAAC,CAAC,CAAC,+BAAyB;gBAC3D,CAAC,CAAC,gCAA0B,CAAC;QAE/C,MAAM,CAAC,SAAS,GAAG,WAAW,GAAG,SAAS,CAAC;IAC/C,CAAC;IAEO,+BAAU,GAAlB,UAAmB,MAAc,EAAE,OAAmB;QAAnB,wBAAA,EAAA,WAAmB;QAClD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;YACrB,MAAM,CAAC,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;gBACrC,IAAI,CAAC;oBACD,MAAM,CAAC,IAAI,EAAE,CAAC;gBAClB,CAAC;gBAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACb,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACzB,CAAC;gBACD,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,OAAO,CAAC,CAAC;IAChB,CAAC;IAEM,iCAAY,GAAnB,UAAoB,MAAc;QAC9B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC;IAC3C,CAAC;IAEM,8BAAS,GAAhB,UAAiB,MAAc;QAC3B,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACtC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAC1B,MAAM,CAAC,CAAC,MAAM,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC;IACxC,CAAC;IAEM,mCAAc,GAArB;QAAA,iBAKC;QAJG,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE;aACxB,IAAI,CAAC;YACF,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,iBAAiB,EAAE,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,yBAAI,GAAX,UAAY,MAAc;QACtB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAEM,0BAAK,GAAZ,UAAa,MAAc;QAA3B,iBAMC;QALG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,OAAO;YAChC,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACtC,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,wCAAmB,GAA1B,UAA2B,MAAc,EAAE,EAAU;QAArD,iBASC;QARG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAEtC,MAAM,CAAC,gBAAgB,CAAC,EAAE,EAAE,UAAA,KAAK;gBAC7B,EAAE,CAAC,CAAC,KAAK,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,mCAAc,GAArB,UAAsB,MAAc,EAAE,OAAe;QAArD,iBAOC;QANG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,OAAO;YAChC,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAEtC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;YAClC,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,qCAAgB,GAAvB,UAAwB,MAAc,EAAE,OAAe;QAAvD,iBASC;QARG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAEtC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,UAAA,KAAK;gBACzC,EAAE,CAAC,CAAC,KAAK,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6CAAwB,GAA/B,UAAgC,MAAc,EAAE,eAAuB,EAAE,gBAAwB;QAAjG,iBAUC;QATG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACtC,IAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;YAEhD,KAAK,CAAC,aAAa,CAAC,gBAAgB,EAAE,UAAA,KAAK;gBACvC,EAAE,CAAC,CAAC,KAAK,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,sCAAiB,GAAxB,UAAyB,MAAc,EAAE,KAAmC,EAAE,MAAc;QAA5F,iBAaC;QAZG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACtC,IAAM,IAAI,GAAG,KAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,wBAAkB,CAAC,CAAC;YAEzE,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,UAAC,KAAK,EAAE,MAAM;gBACxF,EAAE,CAAC,CAAC,KAAK,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,OAAO,CAAC;oBACJ,IAAI,EAAE,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;oBACnC,MAAM,EAAE,IAAI,CAAC,OAAO;iBACvB,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,uCAAkB,GAAzB,UAA0B,MAAc,EAAE,KAAmC,EAAE,IAAoC;QAAnH,iBAcC;QAbG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACtC,IAAM,IAAI,GAAG,KAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,yBAAmB,CAAC,CAAC;YAC1E,IAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;YAEtE,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,UAAA,KAAK;gBAC/E,EAAE,CAAC,CAAC,KAAK,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,OAAO,CAAC;oBACJ,YAAY,EAAE,MAAM,CAAC,UAAU;oBAC/B,MAAM,EAAE,IAAI,CAAC,OAAO;iBACvB,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,8BAAS,GAAhB,UAAiB,MAAc,EAAE,SAAuB,EAAE,cAAsB;QAAhF,iBASC;QARG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACtC,IAAM,MAAM,GAAG,cAAc,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,wBAAkB,CAAC,CAAC,CAAC,yBAAmB,CAAC,CAAC;YAChG,MAAM,CAAC,eAAe,CAAC,+BAAyB,EAAE,SAAS,CAAC,aAAa,EAAE,SAAS,CAAC,aAAa,EAAE,MAAM,EAAE,CAAC,EAAE,UAAA,KAAK;gBAChH,EAAE,CAAC,CAAC,KAAK,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,+BAAU,GAAjB,UAAkB,MAAc,EAAE,cAAsB,EAAE,MAAc;QAAxE,iBAaC;QAZG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACtC,IAAM,QAAQ,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;YAE5D,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,IAAI;gBAClC,EAAE,CAAC,CAAC,KAAK,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,OAAO,CAAC;oBACJ,IAAI,EAAE,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;oBACjC,MAAM,EAAE,IAAI,CAAC,OAAO;iBACvB,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,gCAAW,GAAlB,UAAmB,MAAc,EAAE,cAAsB,EAAE,IAAkB;QAA7E,iBAcC;QAbG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACtC,IAAM,QAAQ,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;YAC7D,IAAM,MAAM,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YAE/C,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAA,KAAK;gBAC3B,EAAE,CAAC,CAAC,KAAK,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,OAAO,CAAC;oBACJ,YAAY,EAAE,MAAM,CAAC,UAAU;oBAC/B,MAAM,EAAE,IAAI,CAAC,OAAO;iBACvB,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,0CAAqB,GAA5B,UAA6B,OAAe,EAAE,eAAuB,EAAE,cAA6B;QAChG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,QAAQ,EAAE,MAAM;YAChC,MAAM,CAAC,qDAAqD,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,2CAAsB,GAA7B,UAA8B,OAAe,EAAE,eAAuB,EAAE,KAAmB,EAAE,cAA6B;QACtH,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,QAAQ,EAAE,MAAM;YAChC,MAAM,CAAC,sDAAsD,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,0BAAK,GAAZ,UAAa,MAAc;QAA3B,iBAQC;QAPG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAM,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACtC,MAAM,CAAC,KAAK,CAAC,UAAA,KAAK;gBACd,EAAE,CAAC,CAAC,KAAK,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IA5pBa,+BAAoB,GAAW,SAAS,CAAC;IACzC,kCAAuB,GAAW,YAAY,CAAC;IA4pBjE,iBAAC;CA/pBD,AA+pBC,CA/pB+B,qBAAY,GA+pB3C;AA/pBY,gCAAU;AAiqBvB;;GAEG;AACU,QAAA,OAAO,GAAG,IAAI,UAAU,EAAE,CAAC","file":"adapter.js","sourcesContent":["/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { EventEmitter } from \"events\";\nimport {\n    getDeviceList,\n    Device,\n    Endpoint,\n    InEndpoint,\n    OutEndpoint,\n    ConfigDescriptor,\n    InterfaceDescriptor,\n    on,\n    LIBUSB_ENDPOINT_IN,\n    LIBUSB_ENDPOINT_OUT,\n    LIBUSB_REQUEST_GET_DESCRIPTOR,\n    LIBUSB_TRANSFER_TYPE_INTERRUPT,\n    LIBUSB_TRANSFER_TYPE_BULK,\n    LIBUSB_RECIPIENT_DEVICE,\n    LIBUSB_RECIPIENT_INTERFACE,\n    LIBUSB_RECIPIENT_ENDPOINT,\n    LIBUSB_RECIPIENT_OTHER,\n    LIBUSB_REQUEST_TYPE_STANDARD,\n    LIBUSB_REQUEST_TYPE_CLASS,\n    LIBUSB_REQUEST_TYPE_VENDOR,\n    EndpointDescriptor,\n    DeviceDescriptor\n} from \"usb\";\nimport {\n    USBControlTransferParameters,\n    USBInTransferResult,\n    USBOutTransferResult,\n    USBIsochronousInTransferResult,\n    USBIsochronousOutTransferResult\n} from \"./interfaces\";\nimport { USBConfiguration } from \"./configuration\";\nimport { USBInterface } from \"./interface\";\nimport { USBAlternateInterface } from \"./alternate\";\nimport { USBEndpoint } from \"./endpoint\";\nimport { USBDevice } from \"./device\";\nimport { USBDirection } from \"./enums\";\n\n/**\n * @hidden\n */\nconst DEFAULT_DELAY_TIMEOUT = 200;\n/**\n * @hidden\n */\nconst DEFAULT_RETRY_COUNT = 10;\n\n/**\n * @hidden\n */\nconst CONSTANTS = {\n    WEB_UUID: \"3408b638-09a9-47a0-8bfd-a0768815b665\",\n    LIBUSB_DT_BOS: 0x0f,\n    LIBUSB_DT_BOS_SIZE: 0x05,\n    LIBUSB_TRANSFER_TYPE_MASK: 0x03,\n    USB_VERSION: 0x201,\n    CAPABILITY_VERSION: 0x0100,\n    URL_REQUEST_TYPE: 0xC0,\n    URL_REQUEST_INDEX: 0x02,\n    CLEAR_FEATURE: 0x01,\n    ENDPOINT_HALT: 0x00\n};\n\n/**\n * @hidden\n */\nexport interface Adapter {\n    getConnected(handle: string): boolean;\n    getOpened(handle: string): boolean;\n\n    listUSBDevices(): Promise<Array<USBDevice>>;\n    open(handle: string): Promise<void>;\n    close(handle: string): Promise<void>;\n    selectConfiguration(handle: string, id: number): Promise<void>;\n    claimInterface(handle: string, address: number): Promise<void>;\n    releaseInterface(handle: string, address: number): Promise<void>;\n    selectAlternateInterface(handle: string, interfaceNumber: number, alternateSetting: number): Promise<void>;\n    controlTransferIn(handle: string, setup: USBControlTransferParameters, length: number): Promise<USBInTransferResult>;\n    controlTransferOut(handle: string, setup: USBControlTransferParameters, data: ArrayBuffer | ArrayBufferView): Promise<USBOutTransferResult>;\n    clearHalt(handle: string, direction: USBDirection, endpointNumber: number): Promise<void>;\n    transferIn(handle: string, endpointNumber: number, length: number): Promise<USBInTransferResult>;\n    transferOut(handle: string, endpointNumber: number, data: BufferSource): Promise<USBOutTransferResult>;\n    isochronousTransferIn(_handle: string, _endpointNumber: number, _packetLengths: Array<number>): Promise<USBIsochronousInTransferResult>;\n    isochronousTransferOut(_handle: string, _endpointNumber: number, _data: BufferSource, _packetLengths: Array<number>): Promise<USBIsochronousOutTransferResult>;\n    reset(handle: string): Promise<void>;\n}\n\n/**\n * @hidden\n */\nexport class USBAdapter extends EventEmitter implements Adapter {\n\n    public static EVENT_DEVICE_CONNECT: string = \"connect\";\n    public static EVENT_DEVICE_DISCONNECT: string = \"disconnect\";\n\n    // Maintains a live list of connected Web USB devices\n    private devices: { [key: string]: { device: Device, url: string }} = {};\n\n    constructor() {\n        super();\n\n        on(\"attach\", device => {\n            this.loadDevice(device, DEFAULT_RETRY_COUNT)\n            .then(loadedDevice => {\n                if (loadedDevice) {\n                    const handle = this.getDeviceHandle(loadedDevice);\n                    this.devicetoUSBDevice(handle)\n                    .then(usbDevice => {\n                        if (usbDevice) {\n                            this.emit(USBAdapter.EVENT_DEVICE_CONNECT, usbDevice);\n                        }\n                    });\n                }\n            });\n        });\n\n        on(\"detach\", device => {\n            const handle = this.getDeviceHandle(device);\n\n            if (handle && this.devices[handle]) {\n                delete this.devices[handle];\n                this.emit(USBAdapter.EVENT_DEVICE_DISCONNECT, handle);\n            }\n        });\n    }\n\n    private getDeviceHandle(device: Device): string {\n        if (device.busNumber === null || device.deviceAddress === null) {\n            return null;\n        }\n\n        return `${device.busNumber}.${device.deviceAddress}`;\n    }\n\n    private serialPromises<T>(task: (param: any) => Promise<T>, params: Array<any>): Promise<Array<T>> {\n        function reducer(chain, param) {\n            return chain\n            .then(results => {\n                return task.call(this, param)\n                .then(result => {\n                    if (result) {\n                        results.push(result);\n                    }\n                    return results;\n                });\n            });\n        }\n        return params.reduce(reducer.bind(this), Promise.resolve([]));\n    }\n\n    private serialDevicePromises<T>(task: (device: Device, descriptor: any) => Promise<T>, device: Device, descriptors: Array<any>): Promise<Array<T>> {\n        function reducer(chain, descriptor) {\n            return chain\n            .then(results => {\n                return task.call(this, device, descriptor)\n                .then(result => {\n                    results.push(result);\n                    return results;\n                });\n            });\n        }\n        return descriptors.reduce(reducer.bind(this), Promise.resolve([]));\n    }\n\n    private delay(timeout: number = DEFAULT_DELAY_TIMEOUT): Promise<void> {\n        return new Promise((resolve, _reject) => {\n            setTimeout(resolve, timeout);\n        });\n    }\n\n    private retryPromise(fn: () => Promise<any>, retries: number = 0, timeout: number = DEFAULT_DELAY_TIMEOUT): Promise<void> {\n        return new Promise((resolve, reject) => {\n            fn()\n            .then(resolve)\n            .catch(error => {\n                if (retries === 0) {\n                    return reject(error);\n                }\n\n                return this.delay(timeout)\n                .then(() => this.retryPromise(fn, --retries, timeout))\n                .then(resolve);\n            });\n        });\n    }\n\n    private loadDevices(): Promise<Array<Device>> {\n        const devices = getDeviceList();\n        return this.serialPromises(this.loadDevice, devices);\n    }\n\n    private loadDevice(device: Device, retries: number = 0): Promise<Device> {\n\n        // Early guard against unsupported USB devices\n        try {\n            // tslint:disable-next-line:no-unused-expression\n            device.configDescriptor;\n            // tslint:disable-next-line:no-unused-expression\n            device.allConfigDescriptors;\n            // tslint:disable-next-line:no-unused-expression\n            device.deviceDescriptor;\n        } catch (_error) {\n            return Promise.resolve(null);\n        }\n\n        return this.getCapabilities(device, retries)\n        .then(capabilities => this.getWebCapability(capabilities))\n        .then(capability => {\n            return this.getWebUrl(device, capability)\n            .then(url => {\n                const handle = this.getDeviceHandle(device);\n                this.devices[handle] = {\n                    device: device,\n                    url: url\n                };\n                return device;\n            });\n        });\n    }\n\n    private getCapabilities(device: Device, retries: number): Promise<Array<any>> {\n        return new Promise((resolve, _reject) => {\n\n            this.openDevice(device, retries)\n            .then(() => {\n                // device.getCapabilities((error, capabilities) => {\n                this.getDeviceCapabilities(device, (error, capabilities) => {\n                    try {\n                        // Older macs (<10.12) can error with some host devices during a close at this point\n                        device.close();\n                    // tslint:disable-next-line:no-empty\n                    } catch (_error) {}\n                    if (error) return resolve([]);\n                    resolve(capabilities);\n                });\n            })\n            .catch(_error => {\n                resolve([]);\n            });\n        });\n    }\n\n    private getDeviceCapabilities(device: Device, callback: (error: string, capabilities: Array<any>) => any): void {\n        const capabilities = [];\n\n        this.getBosDescriptor(device, (error, descriptor) => {\n            if (error) return callback(error, null);\n\n            const len = descriptor ? descriptor.capabilities.length : 0;\n            for (let i = 0; i < len; i++) {\n                capabilities.push({\n                    device: device,\n                    id: i,\n                    descriptor: descriptor.capabilities[i],\n                    type: descriptor.capabilities[i].bDevCapabilityType,\n                    data: descriptor.capabilities[i].dev_capability_data\n                });\n            }\n\n            callback(undefined, capabilities);\n        });\n    }\n\n    private getBosDescriptor(device: Device, callback: (error: string, descriptor: any) => any) {\n\n        if (device.deviceDescriptor.bcdUSB < CONSTANTS.USB_VERSION) {\n            // BOS is only supported from USB 2.0.1\n            return callback(undefined, null);\n        }\n\n        device.controlTransfer(LIBUSB_ENDPOINT_IN, LIBUSB_REQUEST_GET_DESCRIPTOR, (CONSTANTS.LIBUSB_DT_BOS << 8), 0, CONSTANTS.LIBUSB_DT_BOS_SIZE, (error1, buffer1) => {\n            if (error1) return callback(undefined, null);\n\n            const totalLength = buffer1.readUInt16LE(2);\n            device.controlTransfer(LIBUSB_ENDPOINT_IN, LIBUSB_REQUEST_GET_DESCRIPTOR, (CONSTANTS.LIBUSB_DT_BOS << 8), 0, totalLength, (error, buffer) => {\n                if (error) return callback(undefined, null);\n\n                const descriptor = {\n                    bLength: buffer.readUInt8(0),\n                    bDescriptorType: buffer.readUInt8(1),\n                    wTotalLength: buffer.readUInt16LE(2),\n                    bNumDeviceCaps: buffer.readUInt8(4),\n                    capabilities: []\n                };\n\n                let i = CONSTANTS.LIBUSB_DT_BOS_SIZE;\n                while (i < descriptor.wTotalLength) {\n                    const capability: any = {\n                        bLength: buffer.readUInt8(i + 0),\n                        bDescriptorType: buffer.readUInt8(i + 1),\n                        bDevCapabilityType: buffer.readUInt8(i + 2)\n                    };\n\n                    capability.dev_capability_data = buffer.slice(i + 3, i + capability.bLength);\n                    descriptor.capabilities.push(capability);\n                    i += capability.bLength;\n                }\n\n                // Cache descriptor\n                callback(undefined, descriptor);\n            });\n        });\n    }\n\n    private getWebCapability(capabilities: any): any {\n        const platformCapabilities = capabilities.filter(capability => {\n            return capability.type === 5;\n        });\n\n        const webCapability = platformCapabilities.find(capability => {\n            const uuid = this.decodeUUID(capability.data.slice(1, 17));\n            const version = capability.data.readUInt16LE(17);\n            return uuid === CONSTANTS.WEB_UUID && version === CONSTANTS.CAPABILITY_VERSION;\n        });\n\n        return webCapability;\n    }\n\n    private decodeUUID(buffer: Buffer): string {\n        const data1 = `00000000${buffer.readUInt32LE(0).toString(16)}`.slice(-8);\n        const data2 = `0000${buffer.readUInt16LE(4).toString(16)}`.slice(-4);\n        const data3 = `0000${buffer.readUInt16LE(6).toString(16)}`.slice(-4);\n\n        const data4 = [];\n        for (let i = 8; i < 10; i ++) {\n            data4.push(`00${buffer.readUInt8(i).toString(16)}`.slice(-2));\n        }\n\n        const data5 = [];\n        for (let i = 10; i < 16; i ++) {\n            data5.push(`00${buffer.readUInt8(i).toString(16)}`.slice(-2));\n        }\n\n        return `${data1}-${data2}-${data3}-${data4.join(\"\")}-${data5.join(\"\")}`;\n    }\n\n    private getWebUrl(device: Device, capability: any, suppressErrors: boolean = true): Promise<string> {\n        return new Promise((resolve, reject) => {\n            if (!capability || !capability.data || capability.data.byteLength < 20) return resolve(null);\n\n            const vendor = capability.data.readUInt8(19);\n            const page = capability.data.readUInt8(20);\n\n            this.openDevice(device)\n            .then(() => {\n                device.controlTransfer(CONSTANTS.URL_REQUEST_TYPE, vendor, page, CONSTANTS.URL_REQUEST_INDEX, 64, (error, buffer) => {\n                    device.close();\n\n                    if (error) {\n                        // An error may be due to the URL not existing\n                        if (suppressErrors) return resolve(null);\n                        else return reject(error);\n                    }\n\n                    // const length = buffer.readUInt8(0);\n                    // const type = buffer.readUInt8(1);\n                    let url = buffer.toString(\"utf8\", 3);\n\n                    const scheme = buffer.readUInt8(2); // 0 - http, 1 - https, 255 - in url\n                    if (scheme === 0) url = \"http://\" + url;\n                    if (scheme === 1) url = \"https://\" + url;\n\n                    resolve(url);\n                });\n            })\n            .catch(_error => {\n                resolve(\"\");\n            });\n        });\n    }\n\n    private devicetoUSBDevice(handle: string): Promise<USBDevice> {\n        return new Promise((resolve, _reject) => {\n            const device = this.devices[handle].device;\n            const url = this.devices[handle].url;\n\n            let configs: Array<ConfigDescriptor> = null;\n            let configDescriptor: ConfigDescriptor = null;\n            let deviceDescriptor: DeviceDescriptor = null;\n\n            try {\n                configDescriptor = device.configDescriptor;\n                configs = device.allConfigDescriptors;\n                deviceDescriptor = device.deviceDescriptor;\n            } catch (_error) {\n                return resolve(null);\n            }\n\n            if (!configs) return resolve(null);\n\n            return this.serialDevicePromises(this.configToUSBConfiguration, device, configs)\n            .then(configurations => {\n\n                if (!deviceDescriptor) {\n                    return resolve(new USBDevice({\n                        _handle: this.getDeviceHandle(device),\n                        url: url,\n                        configurations: configurations\n                    }));\n                }\n\n                const deviceVersion = this.decodeVersion(deviceDescriptor.bcdDevice);\n                const usbVersion = this.decodeVersion(deviceDescriptor.bcdUSB);\n                let manufacturerName = null;\n                let productName = null;\n\n                return this.getStringDescriptor(device, deviceDescriptor.iManufacturer)\n                .then(name => {\n                    manufacturerName = name;\n                    return this.getStringDescriptor(device, deviceDescriptor.iProduct);\n                })\n                .then(name => {\n                    productName = name;\n                    return this.getStringDescriptor(device, deviceDescriptor.iSerialNumber);\n                })\n                .then(serialNumber => {\n                    const props: Partial<USBDevice> = {\n                        _handle: this.getDeviceHandle(device),\n                        _maxPacketSize: deviceDescriptor.bMaxPacketSize0,\n                        url: url,\n                        deviceClass: deviceDescriptor.bDeviceClass,\n                        deviceSubclass: deviceDescriptor.bDeviceSubClass,\n                        deviceProtocol: deviceDescriptor.bDeviceProtocol,\n                        productId: deviceDescriptor.idProduct,\n                        vendorId: deviceDescriptor.idVendor,\n                        deviceVersionMajor: deviceVersion.major,\n                        deviceVersionMinor: deviceVersion.minor,\n                        deviceVersionSubminor: deviceVersion.sub,\n                        usbVersionMajor: usbVersion.major,\n                        usbVersionMinor: usbVersion.minor,\n                        usbVersionSubminor: usbVersion.sub,\n                        manufacturerName: manufacturerName,\n                        productName: productName,\n                        serialNumber: serialNumber,\n                        configurations: configurations,\n                        _currentConfiguration: configDescriptor.bConfigurationValue\n                    };\n                    return resolve(new USBDevice(props));\n                });\n            }).catch(_error => {\n                resolve(null);\n            });\n        });\n    }\n\n    private decodeVersion(version: number): { [key: string]: number } {\n        const hex = `0000${version.toString(16)}`.slice(-4);\n        return {\n            major: parseInt(hex.substr(0, 2), null),\n            minor: parseInt(hex.substr(2, 1), null),\n            sub: parseInt(hex.substr(3, 1), null),\n        };\n    }\n\n    private getStringDescriptor(device: Device, index: number): Promise<string> {\n        return new Promise((resolve, reject) => {\n            this.openDevice(device)\n            .then(() => {\n                device.getStringDescriptor(index, (error, buffer) => {\n                    device.close();\n                    if (error) return reject(error);\n                    resolve(buffer.toString());\n                });\n            })\n            .catch(_error => {\n                resolve(\"\");\n            });\n        });\n    }\n\n    private bufferToDataView(buffer: Buffer): DataView {\n        const arrayBuffer = new Uint8Array(buffer).buffer;\n        return new DataView(arrayBuffer);\n    }\n\n    private bufferSourceToBuffer(bufferSource: ArrayBuffer | ArrayBufferView): Buffer {\n        function isView(source: ArrayBuffer | ArrayBufferView): source is ArrayBufferView {\n            return (source as ArrayBufferView).buffer !== undefined;\n        }\n\n        const arrayBuffer = isView(bufferSource) ? bufferSource.buffer : bufferSource;\n        return new Buffer(arrayBuffer);\n    }\n\n    private getEndpoint(device: Device, direction: USBDirection, endpointNumber: number): Endpoint {\n        let endpoint: Endpoint = null;\n        const address = endpointNumber & (direction === \"in\" ? LIBUSB_ENDPOINT_IN : LIBUSB_ENDPOINT_OUT);\n\n        device.interfaces.some(iface => {\n            const epoint = iface.endpoint(address);\n\n            if (epoint) {\n                endpoint = epoint;\n                return true;\n            }\n        });\n\n        return endpoint;\n    }\n\n    private getInEndpoint(device: Device, endpointNumber: number): InEndpoint {\n        const endpoint = this.getEndpoint(device, \"in\", endpointNumber);\n        if (endpoint && endpoint.direction === \"in\") return (endpoint as InEndpoint);\n    }\n\n    private getOutEndpoint(device: Device, endpointNumber: number): OutEndpoint {\n        const endpoint = this.getEndpoint(device, \"out\", endpointNumber);\n        if (endpoint && endpoint.direction === \"out\") return (endpoint as OutEndpoint);\n    }\n\n    private endpointToUSBEndpoint(descriptor: EndpointDescriptor): USBEndpoint {\n        const direction = descriptor.bEndpointAddress & LIBUSB_ENDPOINT_IN ? \"in\" : \"out\";\n        return new USBEndpoint({\n            endpointNumber: descriptor.bEndpointAddress ^ (direction === \"in\" ? LIBUSB_ENDPOINT_IN : LIBUSB_ENDPOINT_OUT),\n            direction: direction,\n            type: (descriptor.bmAttributes & CONSTANTS.LIBUSB_TRANSFER_TYPE_MASK) === LIBUSB_TRANSFER_TYPE_BULK ? \"bulk\"\n                : (descriptor.bmAttributes & CONSTANTS.LIBUSB_TRANSFER_TYPE_MASK) === LIBUSB_TRANSFER_TYPE_INTERRUPT ? \"interrupt\"\n                : \"isochronous\",\n            packetSize: descriptor.wMaxPacketSize\n        });\n    }\n\n    private interfaceToUSBAlternateInterface(device: Device, descriptor: InterfaceDescriptor): Promise<USBAlternateInterface> {\n        return this.getStringDescriptor(device, descriptor.iInterface)\n        .then(name => {\n            return new USBAlternateInterface({\n                alternateSetting: descriptor.bAlternateSetting,\n                interfaceClass: descriptor.bInterfaceClass,\n                interfaceSubclass: descriptor.bInterfaceSubClass,\n                interfaceProtocol: descriptor.bInterfaceProtocol,\n                interfaceName: name,\n                endpoints: descriptor.endpoints.map(this.endpointToUSBEndpoint)\n            });\n        });\n    }\n\n    private interfacesToUSBInterface(device: Device, descriptors: Array<InterfaceDescriptor>): Promise<USBInterface> {\n        return this.serialDevicePromises(this.interfaceToUSBAlternateInterface, device, descriptors)\n        .then(alternates => {\n            return new USBInterface({\n                _handle: this.getDeviceHandle(device),\n                interfaceNumber: descriptors[0].bInterfaceNumber,\n                alternates: alternates\n            });\n        });\n    }\n\n    private configToUSBConfiguration(device: Device, descriptor: ConfigDescriptor): Promise<USBConfiguration> {\n        return this.getStringDescriptor(device, descriptor.iConfiguration)\n        .then(name => {\n            const allInterfaces = descriptor.interfaces || [];\n\n            return this.serialDevicePromises(this.interfacesToUSBInterface, device, allInterfaces)\n            .then(interfaces => {\n                return new USBConfiguration({\n                    configurationValue: descriptor.bConfigurationValue,\n                    configurationName: name,\n                    interfaces: interfaces\n                });\n            });\n        });\n    }\n\n    private getDevice(handle: string): Device {\n        if (!this.devices[handle]) return null;\n        return this.devices[handle].device;\n    }\n\n    private controlTransferParamsToType(setup: USBControlTransferParameters, direction: number): number {\n        const recipient = setup.recipient === \"device\" ? LIBUSB_RECIPIENT_DEVICE\n                        : setup.recipient === \"interface\" ? LIBUSB_RECIPIENT_INTERFACE\n                        : setup.recipient === \"endpoint\" ? LIBUSB_RECIPIENT_ENDPOINT\n                        : LIBUSB_RECIPIENT_OTHER;\n\n        const requestType = setup.requestType === \"standard\" ? LIBUSB_REQUEST_TYPE_STANDARD\n                          : setup.requestType === \"class\" ? LIBUSB_REQUEST_TYPE_CLASS\n                          : LIBUSB_REQUEST_TYPE_VENDOR;\n\n        return recipient | requestType | direction;\n    }\n\n    private openDevice(device: Device, retries: number = 0): Promise<void> {\n        return this.retryPromise(() => {\n            return new Promise<void>((resolve, reject) => {\n                try {\n                    device.open();\n                } catch (error) {\n                    return reject(error);\n                }\n                resolve();\n            });\n        }, retries);\n    }\n\n    public getConnected(handle: string): boolean {\n        return this.getDevice(handle) !== null;\n    }\n\n    public getOpened(handle: string): boolean {\n        const device = this.getDevice(handle);\n        if (!device) return false;\n        return (device.interfaces !== null);\n    }\n\n    public listUSBDevices(): Promise<Array<USBDevice>> {\n        return this.loadDevices()\n        .then(() => {\n            return this.serialPromises(this.devicetoUSBDevice, Object.keys(this.devices));\n        });\n    }\n\n    public open(handle: string): Promise<void> {\n        const device = this.getDevice(handle);\n        return this.openDevice(device);\n    }\n\n    public close(handle: string): Promise<void> {\n        return new Promise((resolve, _reject) => {\n            const device = this.getDevice(handle);\n            device.close();\n            resolve();\n        });\n    }\n\n    public selectConfiguration(handle: string, id: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n\n            device.setConfiguration(id, error => {\n                if (error) return reject(error);\n                resolve();\n            });\n        });\n    }\n\n    public claimInterface(handle: string, address: number): Promise<void> {\n        return new Promise((resolve, _reject) => {\n            const device = this.getDevice(handle);\n\n            device.interface(address).claim();\n            resolve();\n        });\n    }\n\n    public releaseInterface(handle: string, address: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n\n            device.interface(address).release(true, error => {\n                if (error) return reject(error);\n                resolve();\n            });\n        });\n    }\n\n    public selectAlternateInterface(handle: string, interfaceNumber: number, alternateSetting: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const iface = device.interface(interfaceNumber);\n\n            iface.setAltSetting(alternateSetting, error => {\n                if (error) return reject(error);\n                resolve();\n            });\n        });\n    }\n\n    public controlTransferIn(handle: string, setup: USBControlTransferParameters, length: number): Promise<USBInTransferResult> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const type = this.controlTransferParamsToType(setup, LIBUSB_ENDPOINT_IN);\n\n            device.controlTransfer(type, setup.request, setup.value, setup.index, length, (error, buffer) => {\n                if (error) return reject(error);\n                resolve({\n                    data: this.bufferToDataView(buffer),\n                    status: \"ok\" // hack\n                });\n            });\n        });\n    }\n\n    public controlTransferOut(handle: string, setup: USBControlTransferParameters, data?: ArrayBuffer | ArrayBufferView): Promise<USBOutTransferResult> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const type = this.controlTransferParamsToType(setup, LIBUSB_ENDPOINT_OUT);\n            const buffer = data ? this.bufferSourceToBuffer(data) : new Buffer(0);\n\n            device.controlTransfer(type, setup.request, setup.value, setup.index, buffer, error => {\n                if (error) return reject(error);\n                resolve({\n                    bytesWritten: buffer.byteLength, // hack, should be bytes actually written\n                    status: \"ok\" // hack\n                });\n            });\n        });\n    }\n\n    public clearHalt(handle: string, direction: USBDirection, endpointNumber: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const wIndex = endpointNumber & (direction === \"in\" ? LIBUSB_ENDPOINT_IN : LIBUSB_ENDPOINT_OUT);\n            device.controlTransfer(LIBUSB_RECIPIENT_ENDPOINT, CONSTANTS.CLEAR_FEATURE, CONSTANTS.ENDPOINT_HALT, wIndex, 0, error => {\n                if (error) return reject(error);\n                resolve();\n            });\n        });\n    }\n\n    public transferIn(handle: string, endpointNumber: number, length: number): Promise<USBInTransferResult> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const endpoint = this.getInEndpoint(device, endpointNumber);\n\n            endpoint.transfer(length, (error, data) => {\n                if (error) return reject(error);\n                resolve({\n                    data: this.bufferToDataView(data),\n                    status: \"ok\" // hack\n                });\n            });\n        });\n    }\n\n    public transferOut(handle: string, endpointNumber: number, data: BufferSource): Promise<USBOutTransferResult> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            const endpoint = this.getOutEndpoint(device, endpointNumber);\n            const buffer = this.bufferSourceToBuffer(data);\n\n            endpoint.transfer(buffer, error => {\n                if (error) return reject(error);\n                resolve({\n                    bytesWritten: buffer.byteLength, // hack, should be bytes actually written\n                    status: \"ok\" // hack\n                });\n            });\n        });\n    }\n\n    public isochronousTransferIn(_handle: string, _endpointNumber: number, _packetLengths: Array<number>): Promise<USBIsochronousInTransferResult> {\n        return new Promise((_resolve, reject) => {\n            reject(\"isochronousTransferIn error: method not implemented\");\n        });\n    }\n\n    public isochronousTransferOut(_handle: string, _endpointNumber: number, _data: BufferSource, _packetLengths: Array<number>): Promise<USBIsochronousOutTransferResult> {\n        return new Promise((_resolve, reject) => {\n            reject(\"isochronousTransferOut error: method not implemented\");\n        });\n    }\n\n    public reset(handle: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const device = this.getDevice(handle);\n            device.reset(error => {\n                if (error) return reject(error);\n                resolve();\n            });\n        });\n    }\n}\n\n/**\n * @hidden\n */\nexport const adapter = new USBAdapter();\n"],"sourceRoot":"../src"}