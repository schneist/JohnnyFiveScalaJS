{"version":3,"sources":["index.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;EAuBE;;AAEF,6BAA4B;AAUnB,cAVA,SAAG,CAUA;AARZ;;GAEG;AACU,QAAA,GAAG,GAAG,IAAI,SAAG,EAAE,CAAC;AAO7B;;GAEG;AACH,qCAGmB;AAFf,4BAAA,OAAO,CAAA;AACP,+BAAA,UAAU,CAAA;AA8Bd;;GAEG;AACH,yCAAoD;AAA3C,4CAAA,qBAAqB,CAAA;AAC9B,iDAAmD;AAA1C,2CAAA,gBAAgB,CAAA;AACzB,mCAAqC;AAA5B,6BAAA,SAAS,CAAA;AAClB,uCAAyC;AAAhC,iCAAA,WAAW,CAAA;AACpB,yCAA2C;AAAlC,mCAAA,YAAY,CAAA","file":"index.js","sourcesContent":["/*\n* Node WebUSB\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { USB } from \"./usb\";\n\n/**\n * Default usb instance synonymous with `navigator.usb`\n */\nexport const usb = new USB();\n\n/**\n * USB class for creating new instances\n */\nexport { USB };\n\n/**\n * Adapter\n */\nexport {\n    adapter,\n    USBAdapter\n} from \"./adapter\";\n\n/**\n * Interfaces\n */\nexport {\n    USBOptions,\n    USBDeviceFilter,\n    USBDeviceRequestOptions,\n    USBControlTransferParameters,\n    USBInTransferResult,\n    USBOutTransferResult,\n    USBIsochronousInTransferPacket,\n    USBIsochronousInTransferResult,\n    USBIsochronousOutTransferPacket,\n    USBIsochronousOutTransferResult\n} from \"./interfaces\";\n\n/**\n * Enums\n */\nexport {\n    USBDirection,\n    USBEndpointType,\n    USBRecipient,\n    USBRequestType,\n    USBTransferStatus\n} from \"./enums\";\n\n/**\n * Other classes if required\n */\nexport { USBAlternateInterface } from \"./alternate\";\nexport { USBConfiguration } from \"./configuration\";\nexport { USBDevice } from \"./device\";\nexport { USBEndpoint } from \"./endpoint\";\nexport { USBInterface } from \"./interface\";\n"],"sourceRoot":"../src"}